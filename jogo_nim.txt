O resultado dos testes com seu programa foi:

***** [0.15 pontos]: Testando usuario_escolhe_jogada (n = 5, m = 3, resposta 2) - Falhou *****
AssertionError: Valor esperado: 2; valor recebido: 3.


***** [0.15 pontos]: Testando usuario_escolhe_jogada (n = 6, m = 4, resposta 1) - Falhou *****
AssertionError: Valor esperado: 1; valor recebido: 5.


***** [0.15 pontos]: Testando usuario_escolhe_jogada (n = 5, m = 3, resposta 3) - Falhou *****
AssertionError: Valor esperado: 3; valor recebido: 2.


***** [0.01 pontos]: Testando usuario_escolhe_jogada quando n <= m (n = 3, m = 5, resposta 2) - Falhou *****
AssertionError: Valor esperado: 2; valor recebido: 1.


***** [0.01 pontos]: Testando usuario_escolhe_jogada quando n <= m (n = 3, m = 5, resposta 3) - Falhou *****
AssertionError: Valor esperado: 3; valor recebido: 0.


***** [0.01 pontos]: Testando usuario_escolhe_jogada quando n <= m (n = 1, m = 1, resposta 1) - Falhou *****
AssertionError: Valor esperado: 1; valor recebido: 0.


***** [0.04 pontos]: Testando usuario_escolhe_jogada com jogada inválida: valor > m (n = 5, m = 3, respostas 5, 2) - Falhou *****
AssertionError: Valor esperado: 2; valor recebido: 3.


***** [0.04 pontos]: Testando usuario_escolhe_jogada com jogada inválida: valor > m (n = 5, m = 3, respostas 4, 3) - Falhou *****
AssertionError: Valor esperado: 3; valor recebido: 2.


***** [0.04 pontos]: Testando usuario_escolhe_jogada com jogada inválida: valor <= 0 (n = 5, m = 3, respostas 0, 2) - Falhou *****
Timeout

***** [0.04 pontos]: Testando usuario_escolhe_jogada com jogada inválida: valor <= 0 (n = 5, m = 3, respostas -1, 3) - Falhou *****
Timeout

***** [0.01 pontos]: Testando usuario_escolhe_jogada com jogada inválida se n <= m (n = 3, m = 5, respostas 4, 3) - Falhou *****
Timeout

***** [0.01 pontos]: Testando usuario_escolhe_jogada com jogada inválida se n <= m (n = 3, m = 5, respostas 4, 1) - Falhou *****
Timeout

***** [0.01 pontos]: Testando usuario_escolhe_jogada com jogada inválida se n <= m (n = 3, m = 3, respostas 4, 3) - Falhou *****
AssertionError: Valor esperado: 3; valor recebido: 0.


***** [0.01 pontos]: Testando usuario_escolhe_jogada com jogada inválida se n <= m (n = 3, m = 3, respostas 4, 1) - Falhou *****
AssertionError: Valor esperado: 1; valor recebido: 2.


***** [0.05 pontos]: Testando usuario_escolhe_jogada com múltiplas jogadas inválidas (n = 5, m = 3, respostas 5, 0, -1, 2) - Falhou *****
Timeout

***** [0.11 pontos]: Testando se computador_escolhe_jogada usa a estratégia vencedora (n = 3, m = 1) - Falhou *****
AssertionError: Esperado: 1; recebido: 2
computador_escolhe_jogada deve usar a estratégia vencedora e devolver o número de peças que o computador vai remover nessa jogada.

***** [0.11 pontos]: Testando se computador_escolhe_jogada usa a estratégia vencedora (n = 14, m = 4) - Falhou *****
AssertionError: Esperado: 4; recebido: 10
computador_escolhe_jogada deve usar a estratégia vencedora e devolver o número de peças que o computador vai remover nessa jogada.

***** [0.11 pontos]: Testando se computador_escolhe_jogada usa a estratégia vencedora (n = 13, m = 4) - Falhou *****
AssertionError: Esperado: 3; recebido: 9
computador_escolhe_jogada deve usar a estratégia vencedora e devolver o número de peças que o computador vai remover nessa jogada.

***** [0.11 pontos]: Testando se computador_escolhe_jogada usa a estratégia vencedora (n = 11, m = 4) - Falhou *****
AssertionError: Esperado: 1; recebido: 7
computador_escolhe_jogada deve usar a estratégia vencedora e devolver o número de peças que o computador vai remover nessa jogada.

***** [0.11 pontos]: Testando computador_escolhe_jogada quando n <= m, ou seja, o jogo está ganho (n = 3, m = 5) - Falhou *****
AssertionError: Esperado: 3; recebido: -2
computador_escolhe_jogada deve devolver o número de peças a remover do tabuleiro nesta jogada (neste caso, todas, pois é possível ganhar o jogo).

***** [0.11 pontos]: Testando computador_escolhe_jogada quando n <= m, ou seja, o jogo está ganho (n = 1, m = 1) - Falhou *****
AssertionError: Esperado: 1; recebido: 0
computador_escolhe_jogada deve devolver o número de peças a remover do tabuleiro nesta jogada (neste caso, todas, pois é possível ganhar o jogo).

***** [0.11 pontos]: Testando computador_escolhe_jogada quando n <= m, ou seja, o jogo está ganho (n = 2, m = 2) - Falhou *****
AssertionError: Esperado: 2; recebido: 0
computador_escolhe_jogada deve devolver o número de peças a remover do tabuleiro nesta jogada (neste caso, todas, pois é possível ganhar o jogo).

***** [0.03 pontos]: Testando jogada do computador quando é impossível usar a estratégia vencedora (n = 6, m = 2) - Falhou *****
AssertionError: Esperado: 2; recebido: 5
Quando não é possível usar a estratégia vencedora, computador_escolhe_jogada deve remover m peças do tabuleiro

***** [0.03 pontos]: Testando jogada do computador quando é impossível usar a estratégia vencedora (n = 4, m = 1) - Falhou *****
AssertionError: Esperado: 1; recebido: 3
Quando não é possível usar a estratégia vencedora, computador_escolhe_jogada deve remover m peças do tabuleiro

***** [0.03 pontos]: Testando jogada do computador quando é impossível usar a estratégia vencedora (n = 15, m = 4) - Falhou *****
AssertionError: Esperado: 4; recebido: 14
Quando não é possível usar a estratégia vencedora, computador_escolhe_jogada deve remover m peças do tabuleiro

***** [0.32 pontos]: Checando partida unica (n = 5, m = 3, jogadas = (2,)) - Falhou *****
AssertionError: Computador deveria ter ganhado

***** [0.32 pontos]: Checando partida unica (n = 9, m = 2, jogadas = (1, 2, 2)) - Falhou *****
AssertionError: Deveria comecar com o oponente

***** [0.32 pontos]: Checando partida unica (n = 9, m = 2, jogadas = (1, 2, 1)) - Falhou *****
AssertionError: Deveria comecar com o oponente

***** [0.32 pontos]: Checando partida unica (n = 11, m = 3, jogadas = (2, 3)) - Falhou *****
AssertionError: Computador deveria ter ganhado

***** [0.12 pontos]: Checando campeonato (partida 1: n = 5, m = 3, jogadas = [1]; partida 2: n = 5, m = 3, jogadas = [2]; partida 3: n = 9, m = 2, jogadas = [1, 2, 2]) - Falhou *****
AssertionError: Computador deveria ter ganhado

